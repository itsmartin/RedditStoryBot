---
# Configuration for RedditStoryBot

# The name of the subreddit that the bot will run on:

subreddit:          "bottesting"

# How many posts in /r/subreddit/new will the bot go back, every time it runs?

new_limit:          20

# Client ID and Client Secret for the reddit API.
# See https://www.reddit.com/prefs/apps/ to set this up.

client_id:          "editme"
client_secret:      "editme"

# Username and password that the bot will use to log in to reddit:

username:           "username"
password:           "password"

# Path to a directory where the bot will store its persistent data:

data_path:          "/data/storybot"

# How long the bot should sleep between runs (in minutes)

sleep_time:         10

# A list of flairs which the bot will ignore. Include null if you want the bot
# to ignore unflaired posts too. Leave this empty if the bot should handle all
# posts.

flairs_to_ignore:
  - "meta"
  - null

# The templates for the bot's response. It should be a list of possible response
# formats, one of which (randomly chosen) will be posted by the bot. Each
# response format must include the following formatting placeholders:
#
# {list} - will be replaced by the actual list of posts
# {author} - will be replaced by the author's username
# {botname} - will be replaced by the bot's username (as configured above)
# {subreddit} - will be replaced by the name of the subreddit (as configured above)
#
# In this example, there is only one template. If you don't want the bot to
# respond to posts where the submitter has one or more previous submission, then
# leave this as an empty list ([]).
#
# See https://yaml-multiline.info/ for some helpful information about formatting
# YAML multiline strings.

response_templates:
  - |-
    **Previous stories by /u/{author}:**

    {list}

    **[Search for more by {author}](http://www.reddit.com/r/{subreddit}/search?q=author%3A{author}&sort=new&restrict_sr=on)**

    ---
    ^({greeting}. I am {botname}. For more information about me, please send me a) ^[message](/u/{botname})."

# The template for each entry in the list of recent posts.
#
# {title} - will be replaced with the post's title.
# {permalink} - will be replaced with the post's URL.
# {score:d} - will be replaced with the posts's current score

response_entry: "* [{title}]({permalink}) ^(({score:d} points)^)"

# The text to add to the end of the list if there isn't room to post them all.
#
# {count} - will be replaced with the number of posts that were dropped from the list

response_too_long: "* ...and {count} more"

# The templates for the bot's response to submitters with no prior posts. This
# works the same as responseTemplates above, except that the {list} placeholder
# is not used.
#
# In this example, there is only one template. If you don't want the bot to
# respond to posts where the submitter has no previous submissions, then
# leave this as an empty list ([]).

new_submitter_response_templates:
  - |-
    **/u/{author} has no previous stories right now**. If you're from the future, you can **[search for more by {author}](http://www.reddit.com/r/{subreddit}/search?q=author%3A{author}&sort=new&restrict_sr=on)**

    ---
    ^({greeting}. I am {botname}. For more information about me, please send me a) ^[message](/u/{botname})."

# This option specifies a list of additional substitutions that can be used
# to replace placeholders in the template. It should be a dictionary, mapping
# placeholders to the text they will be replaced by.
# If the replacement text is a list, as in the example below, then one item
# from the list will be chosen at random.
#
# In this example, {greeting} will be replaced with a random greeting.
response_substitutions:
  - greeting:
    - "Hello"
    - "Aloha"
    - "Hi"
